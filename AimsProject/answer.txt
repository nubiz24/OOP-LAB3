10. Unique item in a list:
If the passing object is not an instance of Media, what happens?
 - Phép so sánh sẽ không được thực hiện nếu đối tượng truyền vào không phải là một instance của Media. Tuy nhiên, nếu đối tượng đó là instance của một lớp con kế thừa từ Media, thì phép so sánh vẫn có thể được thực hiện.


11. Polymorphism with toString() method:
Test trong lớp MediaTest:
Kết luận: Mặc dù các lớp CD, DVD, và Book đều kế thừa từ lớp cha Media và thừa hưởng phương thức toString(), mỗi lớp con có thể triển khai phương thức này theo cách riêng. Khi duyệt qua danh sách sản phẩm và gọi phương thức toString() trên từng đối tượng, phương thức được gọi sẽ là phiên bản cụ thể của lớp tương ứng. Vì vậy, kết quả hiển thị của từng sản phẩm sẽ khác nhau, tùy thuộc vào cách triển khai toString() trong lớp con của nó.


12. Sort media in the cart
a. What class should implement the Comparable interface?
- Lớp chứa đối tượng cần so sánh, chẳng hạn Media hoặc các lớp con của nó như DigitalVideoDisc, Book, CompactDisc.

b. In those classes, how should you implement the compareTo() method be to reflect the ordering that we want?
- Triển khai phương thức compareTo trong lớp Media:
    public int compareTo(Media other) {
        int titleCompare = this.getTitle().compareTo(other.getTitle());
        if (titleCompare != 0) {
            return titleCompare;
        }
        return Float.compare(other.getCost(), this.getCost()); // Sắp xếp theo giá giảm dần nếu tiêu đề giống nhau
    }
}

c. Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?
- Nếu muốn sắp xếp một danh sách theo hai tiêu chí khác nhau, như "theo tên rồi đến giá" hoặc "theo giá rồi đến tên", thì chỉ sử dụng giao diện Comparable là không đủ, vì nó chỉ cho phép định nghĩa một quy tắc sắp xếp mặc định. Để linh hoạt hơn, nên sử dụng Comparator.
Comparator cho phép tạo nhiều quy tắc sắp xếp tùy ý mà không cần chỉnh sửa lớp gốc. Với cách này, có thể định nghĩa một bộ so sánh sắp xếp theo tên trước, một bộ so sánh khác sắp xếp theo giá trước, và sử dụng chúng tùy vào nhu cầu.

d. Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing
length, then cost. How would you modify your code to allow this?
- Override phương thức compareTo() trong lớp DigitalVideoDisc:

	@Override
	public int compareTo(Media other) {
		if (other instanceof DigitalVideoDisc) {
			DigitalVideoDisc dvd = (DigitalVideoDisc) other;
			int titleCompare = this.getTitle().compareTo(dvd.getTitle());
			if (titleCompare != 0) {
				return titleCompare;
			}
			int lengthCompare = Integer.compare(dvd.getLength(), this.getLength()); // Sắp xếp theo chiều dài giảm dần
			if (lengthCompare != 0) {
				return lengthCompare;
			}
			return Float.compare(dvd.getCost(), this.getCost()); // Sắp xếp theo giá giảm dần
		}
		return super.compareTo(other); // Nếu không phải DVD, sử dụng phương thức compareTo trong Media
	}
